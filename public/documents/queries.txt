*****INNER JOIN *****
SELECT
	std.id AS studentId, add.id AS addressId, std.name, add.address
FROM
	`studentNew` AS `std`, `address` AS `add`
WHERE
	`std`.`id` = `add`.`id`
	

***** NATURAL JOIN *****	
SELECT
	std.id AS studentId, add.id AS addressId, std.name, add.address
FROM
	`studentNew` AS `std`
NATURAL JOIN `address` AS `add`


***** LEFT/LEFT OUTER JOIN *****
SELECT
	std.id AS studentId, add.id AS addressId, std.name, add.address
FROM
	`studentNew` AS `std`
LEFT JOIN `address` AS `add` ON `std`.`id` = `add`.`stdId`
ORDER BY std.id ASC


***** RIGHT/RIGHT OUTER JOIN *****
SELECT
	add.id AS addressId, std.id AS studentId, std.name, add.address
FROM
	`studentNew` AS `std`
RIGHT JOIN `address` AS `add` ON `std`.`id` = `add`.`stdId`
ORDER BY add.id ASC


***** FULL OUTER JOIN *****
(SELECT
	std.id AS studentId, std.name, add.id AS addressId, add.address
FROM
	`studentNew` AS `std`
LEFT JOIN `address` AS `add` ON `std`.`id` = `add`.`stdId`
ORDER BY std.id ASC)

UNION

(SELECT
	std.id AS studentId, std.name, add.id AS addressId, add.address
FROM
	`studentNew` AS `std`
RIGHT JOIN `address` AS `add` ON `std`.`id` = `add`.`stdId`
ORDER BY add.id ASC)



***** UNION *****
SELECT * FROM `studentNew` WHERE id = 1
UNION
SELECT * FROM `studentNew` WHERE id = 10
UNION
SELECT * FROM `studentNew` WHERE id = 6


***** UNION WITH SUBQUERY *****
SELECT * FROM
(
SELECT * FROM `studentNew` WHERE id = 1
UNION
SELECT * FROM `studentNew` WHERE id = 10
UNION
SELECT * FROM `studentNew` WHERE id = 6
) AS xyz
WHERE xyz.age > 24
ORDER BY xyz.id ASC




***** UNION ALL *****

SELECT * FROM `studentNew` WHERE id = 1
UNION ALL
SELECT * FROM `studentNew` WHERE id = 1
UNION ALL
SELECT * FROM `studentNew` WHERE id = 6


***** INTERSECT USING INNER JOIN *****

SELECT
	s1.id, s1.name, s2.id, s2.firstname
FROM
	studentNew AS s1, student AS s2
WHERE
	s1.id = s2.id AND s1.name = s2.firstname



***** MINUS USING LEFT JOIN *****

SELECT
	t1.id, t1.name, t2.id AS tId, t2.name AS nameNew
FROM
	`tableA` AS t1
LEFT JOIN
	`tableB` AS t2 ON t1.name = t2.name
WHERE
	t2.name IS NULL
ORDER BY
	t1.id ASC


***** VIEW *****

***** Creating view *****
CREATE VIEW `nai_view` AS (SELECT
	t1.id, t1.name
FROM
	`tableA` AS t1
WHERE
	t1.name = 'nani'
ORDER BY
	t1.id ASC)

***** Fetching data from created view *****
SELECT * FROM `nai_view` WHERE NAME = 'bhavin'






***********innerjoin**********8
SELECT
	std.std_id AS studentId, ad.id AS addressId, std.std_name, ad.adress
FROM
	students AS std, address AS ad
WHERE
	std.std_id = ad.id




***************uninon***********
(select 
	 std.std_id AS studentId, std.std_name, ad.id AS addressId, ad.adress
from 
	students as std 
left OUTER JOIN 
	address ad 
on 
	std.std_id = ad.id 
ORDER BY 
	std.std_id ASC)
UNION
(select 
	std.std_id AS studentId, std.std_name, ad.id AS addressId, ad.adress
from 
	students as std 
RIGHT OUTER JOIN 
	address ad 
on 
	std.std_id = ad.id 
ORDER BY 
	std.std_id ASC)


*************rename coloumn name*************
ALTER TABLE "table_name" Change "column 1" "column 2" ["Data Type"];
ALTER TABLE "table_name" RENAME COLUMN "column 1" TO "column 2";
ALTER TABLE Customer CHANGE Address Addr char(50);
ALTER TABLE Customer RENAME COLUMN Address TO Addr;



************update by using inner join*************

UPDATE 
	students as s
INNER JOIN
	address as a
on 
	s.std_id = a.std_id
SET
	s.std_name = 'babu', a.address = 'vizag'
WHERE
	s.std_id = 2	











